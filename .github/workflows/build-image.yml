name: Build Image

on:
  #workflow_dispatch:
  push:
    tags:
      - 'v*'

env:
  REPO_URL: https://github.com/buildroot/buildroot
  REPO_BRANCH: 2022.02.10
  TZ: Europe/Vienna

jobs:
  check-tag:
    name: Check git tag
    runs-on: ubuntu-latest
    outputs:
      release-type: ${{ steps.check-tag.outputs.run_jobs }}
    steps:
      - name: check tag ${{ github.ref }}
        id: check-tag
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs\/tags\/v20[0-9][0-9]\.[1-9]{1}[0-9]{0,}$ ]]; then
            echo "run_jobs=release" >> $GITHUB_OUTPUT
          elif [[ ${{ github.event.ref }} =~ ^refs\/tags\/v20[0-9][0-9]\.[1-9]{1}[0-9]{0,}b[1-9]{1}[0-9]{0,}$ ]]; then
            echo "run_jobs=prerelease" >> $GITHUB_OUTPUT
          fi

  build:
    name: Build image
    runs-on: ubuntu-latest
    needs:
      - check-tag
    steps:
      - name: Get repository name
        run: |
          echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
      - name: Check out repository
        uses: actions/checkout@v3.3.0
      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get -qq update
          sudo -E apt-get -qq upgrade
          sudo apt install wget git bc bison linux-headers-$(uname -r)
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
      # https://github.com/actions/virtual-environments/issues/2577
      - name: Blocked mirror workaround
        run: echo "1.1.1.1 invisible-mirror.net" | sudo tee -a /etc/hosts
      - name: Clone buildroot source code
        working-directory: /workdir
        run: |
          git clone --depth 1 $REPO_URL -b $REPO_BRANCH buildroot_src
          ln -sf /workdir/buildroot_src ${GITHUB_WORKSPACE}/buildroot_src
      - name: Compile buildroot
        run: |
          cd ${GITHUB_WORKSPACE}/buildroot_src
          make BR2_EXTERNAL=${GITHUB_WORKSPACE}/buildroot neuron_rpi3_64_defconfig
          make BR2_TARGET_GENERIC_HOSTNAME=unipi clean all
          mv /workdir/buildroot_src/output/images/sdcard.img /workdir/${{ env.REPOSITORY_NAME }}-${{ github.ref_name }}-neuron-rpi3-64.img
      - name: Upload image
        uses: actions/upload-artifact@v3.1.2
        with:
          name: unipi-neuron-rpi3-64.img
          path: /workdir/buildroot_src/output/images/sdcard.img
      - name: Release image
        uses: softprops/action-gh-release@v1
        if: |
          github.event.name != 'workflow_dispatch'
          && needs.check-tag.outputs.release-type == 'release'
        with:
          name: ${{ env.REPOSITORY_NAME }}-${{ github.ref_name }}
          files: /workdir/${{ env.REPOSITORY_NAME }}-${{ github.ref_name }}-neuron-rpi3-64.img
          prerelease: needs.check-tag.outputs.release-type == 'prerelease'
      - name: Pre release image
        uses: softprops/action-gh-release@v1
        if: |
          github.event.name != 'workflow_dispatch'
          && needs.check-tag.outputs.release-type == 'prerelease'
        with:
          name: ${{ env.REPOSITORY_NAME }}-${{ github.ref_name }}
          files: /workdir/${{ env.REPOSITORY_NAME }}-${{ github.ref_name }}-neuron-rpi3-64.img
          prerelease: True
