name: Release build

on:
  workflow_dispatch:
  push:
    tags:
      - '*'

jobs:
  #create-matrix:
  #- name: Create build matrix
  #      uses: actions/github-script@v6
  #      id: generate_matrix
  #      with:
  #        script: |
  #          const boards = require('./.github/workflows/matrix.json')
  #          return { "board": boards }

  check-tag:
    name: Check git tag
    runs-on: ubuntu-latest
    outputs:
      release-type: ${{ steps.check-tag.outputs.run_jobs }}
    steps:
      - name: check tag ${{ github.ref }}
        id: check-tag
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs\/tags\/[1-9]{1}[0-9]{0,}\.[0-9]{0,}$ ]]; then
            echo "run_jobs=release" >> $GITHUB_OUTPUT
          elif [[ ${{ github.event.ref }} =~ ^refs\/tags\/[1-9]{1}[0-9]{0,}\.[0-9]{0,}-(alpha|beta)[1-9]{1}[0-9]{0,}$ ]]; then
            echo "run_jobs=prerelease" >> $GITHUB_OUTPUT
          fi

  test-source:
    name: Test source files
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Initialization environment
        run: |
          sudo -E apt-get -qq update
          sudo -E apt-get -qq upgrade
          sudo apt install shellcheck
      - name: Check shell scripts
        run: |
          for file in $(find buildroot/board -type f -name "*.sh"); do shellcheck --format=gcc $file; done;
          for file in $(find buildroot/package -type f -name "*.sh"); do shellcheck --format=gcc $file; done;

  build:
    name: Build disk image
    runs-on: ubuntu-latest
    needs:
      - test-source
    steps:
      - name: Get repository name
        run: |
          echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Build docker container
        run: docker build -t ucos-builder .
      - name: Build disk image
        run: |
          docker run --rm --privileged -v "${GITHUB_WORKSPACE}:/build" ucos-builder \
          make BUILDDIR=/build VERSION_DEV=${{ github.ref_name }} neuron_rpi3_64_defconfig
      - name: Upload disk image
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.REPOSITORY_NAME }}-neuron-rpi3-64-${{ github.ref_name }}.img.xz
          path: ${{ github.workspace }}/release/${{ env.REPOSITORY_NAME }}-neuron-rpi3-64-${{ github.ref_name }}.img.xz

  release:
    name: Release disk image
    runs-on: ubuntu-latest
    needs:
      - check-tag
      - build
    if: |
      github.event.name != 'workflow_dispatch'
      && needs.check-tag.outputs.release-type == 'release'
    steps:
      - name: Get repository name
        run: |
          echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
      - name: Download disk image
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.REPOSITORY_NAME }}-neuron-rpi3-64-${{ github.ref_name }}.img.xz
      - name: Release disk image
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.REPOSITORY_NAME }}-neuron-rpi3-64-${{ github.ref_name }}
          files: ${{ env.REPOSITORY_NAME }}-neuron-rpi3-64-${{ github.ref_name }}.img.xz
          prerelease: False

  pre-release:
    name: Pre-release disk image
    runs-on: ubuntu-latest
    needs:
      - check-tag
      - build
    if: |
      github.event.name != 'workflow_dispatch'
      && needs.check-tag.outputs.release-type == 'prerelease'
    steps:
      - name: Get repository name
        run: |
          echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
      - name: Download disk image
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.REPOSITORY_NAME }}-neuron-rpi3-64-${{ github.ref_name }}.img.xz
      - name: Pre release disk image
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.REPOSITORY_NAME }}-neuron-rpi3-64-${{ github.ref_name }}
          files: ${{ env.REPOSITORY_NAME }}-neuron-rpi3-64-${{ github.ref_name }}.img.xz
          prerelease: True
